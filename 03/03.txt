八、逻辑分类
                               1
y' = --------------------------------- -> 归属1类别的概率
        1 + e^-(w0 + w1x1 + w2x2)
                                       0     1
3   1 -> 0.1 (<0.5) 0   0.9  0.1
2   5 -> 0.7 (>0.5) 1   0.3  0.7
逻辑分类器 = LogisticRegression()
代码：log2.py
                      A          B          C
3   1   A  1   0.8   0  0.2   0  0.4   A
2   5   B  0   0.4   1  0.6   0  0.1   B
1   8   C  0   0.3   0  0.4   1  0.9   C
代码：log3.py
九、朴素贝叶斯分类
1.原理
3   1   甲
2   5   乙
1   8   丙
...
x1 x2 C
\___/
   X
计算待预测样本X隶属于C类别的概率：P(C|X)
贝叶斯定理：P(A|B)=P(A)P(B|A)/P(B)
                     P(B)P(A|B)=P(A)P(B|A)
                     P(B, A)=P(A, B)
100
10
1
P(C|X)=P(C)P(X|C)/P(X)
P(C)P(X|C)
=P(C, X)
=P(C, x1, x2)
=P(x1, x2, C)
=P(x1|x2, C)P(x2, C)
=P(x1|x2, C)P(x2|C)P(C)
朴素：条件独立，所有特征值之间无关联性。
=P(x1|C)P(x2|C)P(C)
...
=P(x1|C)P(x2|C)P(x3|C)...P(xn|C)P(C)
import sklearn.naive_bayes as nb
朴素贝叶斯分类器 = nb.GaussianNB()
代码：nb.py
2.划分测试集和训练集
import sklearn.model_selection as ms
ms.train_test_split(输入集, 输出集, 测试集比例, 随机种子)
    -> 训练输入集, 测试输入集, 训练输出集, 测试输出集
用训练输入集和输出集训练模型，然后用测试输入集预测输出，再用预测输出集和测试输出集评估模型的性能。
                      测试输入集
                              |
训练输入集 \          v
                    > 模型对象
训练输出集 /          |
                              v
                     预测输出集    测试输出集
                      \_____________________/
                                       |
                                       v
                                 评估指标
代码：split.py
3.查准率、召回率和F1得分
查准率，正确性，对：找对的/找出来的
召回率，完整性，全：找对的/实际有的
                2 x 查准率 x 召回率
F1得分 = ---------------------
                   查准率 + 召回率
4.交叉验证
ms.cross_val_score(模型对象, 输入集, 输出集, cv=次数
    scoring=指标名称)->得分数组
指标名称：precision_weighted，查准率
                  recall_weighted，召回率
                  f1_weighted，F1得分
                  accuracy，正确率
代码：cv.py
5.混淆矩阵
              预测类0 预测类1 预测类2 预测类3
实际类0 100       0            0           0
实际类1  90        10          0           0
实际类2
实际类3
sm.confusion_matrix(实际类别标签, 预测类别标签)
    -> 混淆矩阵
代码：cm.py
6.分类报告
sm.classification_report(实际类别标签, 预测类别标签)
    -> 分类报告
代码：cr.py
十、随机森林分类
1.汽车质量评估
代码：car.py
2.验证曲线
验证曲线表现的是模型超参数的不同取值和模型性能之间的函数关系。
ms.validation_curve(
    模型, 输入集, 输出集, 超参数名, 取值列表, cv=验证次数)
    -> 训练集f1得分矩阵，测试集f1得分矩阵
          次数1 次数2 次数3 ...
取值1 0.9     0.8    0.9
取值2 0.8     0.7    0.6
取值3 0.6     0.9    0.7 
...
代码：vc.py
3.学习曲线
学习曲线表现的是训练集大小的不同取值和模型性能之间的函数关系。
ms.learning_curve(
    模型, 输入集, 输出集, 训练集大小列表, cv=验证次数)
    -> 训练集大小列表, 训练集f1得分矩阵，测试集f1得分矩阵
                        次数1 次数2 次数3 ...
训练集样本数1 0.9     0.8    0.9
训练集样本数2 0.8     0.7    0.6
训练集样本数3 0.6     0.9    0.7 
...
代码：lc.py
十一、支持向量机(SVM)
1.分类目标
1)寻找合理的分类边界，使得所有类别关于该边界线的支持向量与分类边界的间距相等且最大。
2)分类边界必须线性（一次方程）。
3)对于无法线性分割的样本，通过核函数将其升起高维度空间，寻求线性分类边界。
超平面
2.线性核函数(不做升维变换)
代码：svm_line.py
3.多项式核函数(用幂函数升维变换)
代码：svm_poly.py
4.径向基核函数(用高斯分布函数升维变换)
代码：svm_rbf.py
