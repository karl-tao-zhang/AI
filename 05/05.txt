05.txt


十三、流水管线
1.map:python语言对标量操作矢量化的支持.
def 标量函数(标量):
	...
	return 标量返回值
map(标量函数,矢量) -> 由标量函数的标量返回值组成的矢量返回值迭代器
2.reduce:functools提供的一种针对矢量的降维操作.
一维->零维
矢量->标量
累加或者累乘
def 策略函数(参数1,参数2):
	...
	return返回值
functools.reduce(策略函数,矢量)->标量(D)
矢量:[a,b,c,d,e]
策略函数(a,b)->A
策略函数(A,c)->B
...
策略函数(C,d)->D
3.函数级联:用一个函数调用的返回值作为另一个函数的返回值
代码:cc1.py,cc2.py
4.管线对象
make_pipeline

管线对象=Pipeline([(部件名1,部件对象1),
			(部件名2,部件对象2),
			(部件名3,部件对象3)...
		])
管线对象.fit(训练数据)
训练数据->部件对象1.fit_transform()
			->部件对象2.fit_transform()
			 ->部件对象3.fit_transform()
管线对象.predict(测试输入)
测试数据->部件对象1.fit_transform()
			->部件对象2.fit_transform()
			 ->部件对象3.predict()
			  ->测试输出
x->多项式特征扩展器-x,x^2,x^3,...x^n->线性回归器
x1,x2,...xn->特征优选器->x1,x5,x9->随机森林分类器
			 SeleckKBest           RandomForestClassifier
管线对象.named_steps['部件名']->部件对象
管线对象.set/get_params(部件名__超参数名[=值])[->值] 
							  ^
							  双下划綫
代码:pipe.py

十四.寻找最近邻

1.FNN
import sklearn.neighbors as sn 
model = sn.NearestNeighbors(n_neighbors=近邻数,algorithm=优化算法)
优化算法:ball_tree
model.fit(训练样本集合)
model.kneighbors(测试样本集合)->近邻矩阵,距离矩阵
		  近邻1 近邻2 近邻3
测试样本1 训练样本6 训练样本 8 训练样本19
测试样本2
测试样本3
...
		  近邻1 近邻2 近邻3
测试样本1 0.8    1.2   5.4
测试样本2 
测试样本3
...

代码:fnn.py

2.KNN回归和分类算法
计算待预测样本与训练样本集中每个样本的距离,找出最近的K个邻居,待预测样本所对应的输出有这K个邻居通过加权(与距离成反比投票(分类)或(回归)产生.
分类,不同类别样本的比例尽量均衡.
回归,只能预测训练数据范围之内或者附近的未知样本.
惰性学习方法,训练阶段不会识别任何模式,速度很快,但是所有的预测都需要涉及大量的距离计算,耗时很长.
代码:knnc.py,knnr.py


十五.推荐引擎
1.欧式距离得分
					1
欧氏距离得分=----------------
			    1+欧氏距离
    0<-->1
不相似 相似

代码：es.py
       用户1 用户2 用户3
用户1  xxx    xxx    xxx
用户2  xxx    xxx    xxx
用户3  xxx    xxx    xxx

2.皮氏距离得分
皮尔逊
相关系数
/          \
|1     0.35|
|0.35  1   |
\          /
-1<-->0<-->1
相反  无关 相同
代码:ps.py

3.按照相似度的从高到低的顺序,列出每个用户的相似用户
代码:sim.py
4.生成推荐清单

代码:rcm.py

十六.自然语言
声音->文本->语义->逻辑处理->语义->文本->声音
\-----/\-----/\---------------/\----/\----/
语音处理 自然语言 业务逻辑  自然语言 语音合成



